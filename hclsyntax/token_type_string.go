// Code generated by "stringer -type TokenType -output token_type_string.go"; DO NOT EDIT.

package hclsyntax

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenOBrace-123]
	_ = x[TokenCBrace-125]
	_ = x[TokenOBrack-91]
	_ = x[TokenCBrack-93]
	_ = x[TokenOParen-40]
	_ = x[TokenCParen-41]
	_ = x[TokenOQuote-171]
	_ = x[TokenCQuote-187]
	_ = x[TokenOHeredoc-72]
	_ = x[TokenCHeredoc-104]
	_ = x[TokenStar-42]
	_ = x[TokenSlash-47]
	_ = x[TokenPlus-43]
	_ = x[TokenMinus-45]
	_ = x[TokenPercent-37]
	_ = x[TokenEqual-61]
	_ = x[TokenEqualOp-8788]
	_ = x[TokenNotEqual-8800]
	_ = x[TokenLessThan-60]
	_ = x[TokenLessThanEq-8804]
	_ = x[TokenGreaterThan-62]
	_ = x[TokenGreaterThanEq-8805]
	_ = x[TokenAnd-8743]
	_ = x[TokenOr-8744]
	_ = x[TokenBang-33]
	_ = x[TokenAt-64]
	_ = x[TokenDot-46]
	_ = x[TokenComma-44]
	_ = x[TokenDoubleColon-11820]
	_ = x[TokenEllipsis-8230]
	_ = x[TokenFatArrow-8658]
	_ = x[TokenQuestion-63]
	_ = x[TokenColon-58]
	_ = x[TokenTemplateInterp-8747]
	_ = x[TokenTemplateControl-955]
	_ = x[TokenTemplateSeqEnd-8718]
	_ = x[TokenQuotedLit-81]
	_ = x[TokenStringLit-83]
	_ = x[TokenNumberLit-78]
	_ = x[TokenIdent-73]
	_ = x[TokenComment-67]
	_ = x[TokenNewline-10]
	_ = x[TokenEOF-9220]
	_ = x[TokenBitwiseAnd-38]
	_ = x[TokenBitwiseOr-124]
	_ = x[TokenBitwiseNot-126]
	_ = x[TokenBitwiseXor-94]
	_ = x[TokenStarStar-10138]
	_ = x[TokenApostrophe-39]
	_ = x[TokenBacktick-96]
	_ = x[TokenSemicolon-59]
	_ = x[TokenTabs-9225]
	_ = x[TokenInvalid-65533]
	_ = x[TokenBadUTF8-128169]
	_ = x[TokenQuotedNewline-9252]
	_ = x[TokenNil-0]
}

const _TokenType_name = "TokenNilTokenNewlineTokenBangTokenPercentTokenBitwiseAndTokenApostropheTokenOParenTokenCParenTokenStarTokenPlusTokenCommaTokenMinusTokenDotTokenSlashTokenColonTokenSemicolonTokenLessThanTokenEqualTokenGreaterThanTokenQuestionTokenAtTokenCommentTokenOHeredocTokenIdentTokenNumberLitTokenQuotedLitTokenStringLitTokenOBrackTokenCBrackTokenBitwiseXorTokenBacktickTokenCHeredocTokenOBraceTokenBitwiseOrTokenCBraceTokenBitwiseNotTokenOQuoteTokenCQuoteTokenTemplateControlTokenEllipsisTokenFatArrowTokenTemplateSeqEndTokenAndTokenOrTokenTemplateInterpTokenEqualOpTokenNotEqualTokenLessThanEqTokenGreaterThanEqTokenEOFTokenTabsTokenQuotedNewlineTokenStarStarTokenDoubleColonTokenInvalidTokenBadUTF8"

var _TokenType_map = map[TokenType]string{
	0:      _TokenType_name[0:8],
	10:     _TokenType_name[8:20],
	33:     _TokenType_name[20:29],
	37:     _TokenType_name[29:41],
	38:     _TokenType_name[41:56],
	39:     _TokenType_name[56:71],
	40:     _TokenType_name[71:82],
	41:     _TokenType_name[82:93],
	42:     _TokenType_name[93:102],
	43:     _TokenType_name[102:111],
	44:     _TokenType_name[111:121],
	45:     _TokenType_name[121:131],
	46:     _TokenType_name[131:139],
	47:     _TokenType_name[139:149],
	58:     _TokenType_name[149:159],
	59:     _TokenType_name[159:173],
	60:     _TokenType_name[173:186],
	61:     _TokenType_name[186:196],
	62:     _TokenType_name[196:212],
	63:     _TokenType_name[212:225],
	64:     _TokenType_name[225:232],
	67:     _TokenType_name[232:244],
	72:     _TokenType_name[244:257],
	73:     _TokenType_name[257:267],
	78:     _TokenType_name[267:281],
	81:     _TokenType_name[281:295],
	83:     _TokenType_name[295:309],
	91:     _TokenType_name[309:320],
	93:     _TokenType_name[320:331],
	94:     _TokenType_name[331:346],
	96:     _TokenType_name[346:359],
	104:    _TokenType_name[359:372],
	123:    _TokenType_name[372:383],
	124:    _TokenType_name[383:397],
	125:    _TokenType_name[397:408],
	126:    _TokenType_name[408:423],
	171:    _TokenType_name[423:434],
	187:    _TokenType_name[434:445],
	955:    _TokenType_name[445:465],
	8230:   _TokenType_name[465:478],
	8658:   _TokenType_name[478:491],
	8718:   _TokenType_name[491:510],
	8743:   _TokenType_name[510:518],
	8744:   _TokenType_name[518:525],
	8747:   _TokenType_name[525:544],
	8788:   _TokenType_name[544:556],
	8800:   _TokenType_name[556:569],
	8804:   _TokenType_name[569:584],
	8805:   _TokenType_name[584:602],
	9220:   _TokenType_name[602:610],
	9225:   _TokenType_name[610:619],
	9252:   _TokenType_name[619:637],
	10138:  _TokenType_name[637:650],
	11820:  _TokenType_name[650:666],
	65533:  _TokenType_name[666:678],
	128169: _TokenType_name[678:690],
}

func (i TokenType) String() string {
	if str, ok := _TokenType_map[i]; ok {
		return str
	}
	return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
}
